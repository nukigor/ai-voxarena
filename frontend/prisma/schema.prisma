// frontend/prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// Main Persona record: simple fields + arrays/JSON for flexible traits.
/// Taxonomy-managed links are stored via PersonaTaxonomy (many-to-many).
model Persona {
  id              String   @id @default(uuid())
  name            String
  nickname        String?        // new: optional nickname
  ageGroup        String?        // select
  genderIdentity  String?        // select/free text
  pronouns        String?
  profession      String?        // free text job title
  temperament     String?        // select
  confidence      Int?           // 1..10
  verbosity       String?        // Short/Medium/Long
  tone            String?        // select
  accentNote      String?        // free text override
  quirks          String[]       // text[]
  vocabularyStyle String?        // select
  debateApproach  String[]       // multi-select
  conflictStyle   String?        // select
  voiceProvider   String?        // select
  voiceStyle      Json?          // { pitch, speed, gendered }
  emotionMap      String[]       // multi-select
  avatarUrl       String?        // url to AI generated avatar based on persona properties
  createdAt       DateTime  @default(now())
  updatedAt DateTime @updatedAt @default(now())  // ✅ auto-updated whenever record changes

  // Optional direct FKs for common single-valued taxonomies
  universityId    String?   @db.Uuid
  organizationId  String?   @db.Uuid
  cultureId       String?   @db.Uuid
  communityTypeId String?   @db.Uuid    // ✅ new taxonomy link: community type

  taxonomies      PersonaTaxonomy[]

  @@index([universityId])
  @@index([organizationId])
  @@index([cultureId])
  @@index([communityTypeId]) // ✅ index for quick queries
}

/// Generic taxonomy table (namespaced by `category`).
/// Examples:
/// - category='university', term='Harvard'
/// - category='organization', term='UNICEF'
/// - category='culture', term='Western Europe'
/// - category='archetype', term='Analytical'
/// - category='political'|'religion'|'philosophy'|'accent'

model Taxonomy {
  id        String   @id @default(uuid())
  category  String
  term      String
  slug      String?
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  personas  PersonaTaxonomy[]

  @@unique([category, term], name: "category_term")
  @@index([category])
}

model PersonaTaxonomy {
  personaId  String
  taxonomyId String
  persona    Persona  @relation(fields: [personaId], references: [id], onDelete: Cascade)
  taxonomy   Taxonomy @relation(fields: [taxonomyId], references: [id], onDelete: Cascade)

  @@id([personaId, taxonomyId], name: "personaId_taxonomyId")
  @@index([taxonomyId])
}